// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TradingFutures.Persistence.Contexts;

#nullable disable

namespace TradingFutures.Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231001091339_iteration-004")]
    partial class iteration004
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TradingFutures.Persistence.DBModels.SettingsItemDB", b =>
                {
                    b.Property<string>("TypeName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PropertyName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("BoolValue")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateDT")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTimeValue")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DecimalValue")
                        .HasColumnType("decimal(38,19)");

                    b.Property<int>("IntValue")
                        .HasColumnType("int");

                    b.Property<string>("StringValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDT")
                        .HasColumnType("datetime2");

                    b.HasKey("TypeName", "PropertyName");

                    b.ToTable("SettingsItem");
                });

            modelBuilder.Entity("TradingFutures.Persistence.DBModels.TradingConditionDB", b =>
                {
                    b.Property<string>("TradingProfileId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ConditionType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Interval")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CreateDT")
                        .HasColumnType("datetime2");

                    b.Property<short>("CrossDiffMode")
                        .HasColumnType("smallint");

                    b.Property<decimal>("CrossDiffThreshold")
                        .HasColumnType("decimal(38,19)");

                    b.Property<short>("PriceDiffLongMode")
                        .HasColumnType("smallint");

                    b.Property<decimal>("PriceDiffLongThreshold")
                        .HasColumnType("decimal(38,19)");

                    b.Property<short>("PriceDiffShortMode")
                        .HasColumnType("smallint");

                    b.Property<decimal>("PriceDiffShortThreshold")
                        .HasColumnType("decimal(38,19)");

                    b.Property<short>("SlopeLongMode")
                        .HasColumnType("smallint");

                    b.Property<decimal>("SlopeLongThreshold")
                        .HasColumnType("decimal(38,19)");

                    b.Property<short>("SlopeShortMode")
                        .HasColumnType("smallint");

                    b.Property<decimal>("SlopeShortThreshold")
                        .HasColumnType("decimal(38,19)");

                    b.Property<short>("SlopeTrendLongMode")
                        .HasColumnType("smallint");

                    b.Property<short>("SlopeTrendShortMode")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("UpdateDT")
                        .HasColumnType("datetime2");

                    b.HasKey("TradingProfileId", "ConditionType", "Interval");

                    b.ToTable("TradingConditions");
                });

            modelBuilder.Entity("TradingFutures.Persistence.DBModels.TradingPositionSettingsDB", b =>
                {
                    b.Property<string>("Asset")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("OrderSide")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("AssistantBuyEnabled")
                        .HasColumnType("bit");

                    b.Property<bool>("AssistantSellEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateDT")
                        .HasColumnType("datetime2");

                    b.Property<bool>("TradingBotEnabled")
                        .HasColumnType("bit");

                    b.Property<bool>("TradingBotSellMode")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDT")
                        .HasColumnType("datetime2");

                    b.HasKey("Asset", "OrderSide");

                    b.ToTable("TradingPositionSettings");
                });

            modelBuilder.Entity("TradingFutures.Persistence.DBModels.TradingProfileDB", b =>
                {
                    b.Property<string>("TradingProfileId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CreateDT")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateDT")
                        .HasColumnType("datetime2");

                    b.HasKey("TradingProfileId");

                    b.ToTable("TradingProfiles");
                });

            modelBuilder.Entity("TradingFutures.Persistence.DBModels.TradingTransactionDB", b =>
                {
                    b.Property<DateTime>("OrderDT")
                        .HasColumnType("datetime2");

                    b.Property<string>("Asset")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("OrderSide")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ContractCode")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreateDT")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Fee")
                        .HasColumnType("decimal(38,19)");

                    b.Property<string>("FeeAsset")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LeverageRate")
                        .HasColumnType("int");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<string>("OrderOffset")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("OrderStatus")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(38,19)");

                    b.Property<decimal>("Profit")
                        .HasColumnType("decimal(38,19)");

                    b.Property<decimal>("RealProfit")
                        .HasColumnType("decimal(38,19)");

                    b.Property<decimal?>("TradeAvgPrice")
                        .HasColumnType("decimal(38,19)");

                    b.Property<decimal>("TradeTurnover")
                        .HasColumnType("decimal(38,19)");

                    b.Property<decimal>("TradeVolume")
                        .HasColumnType("decimal(38,19)");

                    b.Property<DateTime>("UpdateDT")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Volume")
                        .HasColumnType("decimal(38,19)");

                    b.HasKey("OrderDT", "Asset", "OrderSide");

                    b.ToTable("TradingTransaction");
                });

            modelBuilder.Entity("TradingFutures.Persistence.DBModels.TradingConditionDB", b =>
                {
                    b.HasOne("TradingFutures.Persistence.DBModels.TradingProfileDB", "TradingProfile")
                        .WithMany("TradingConditions")
                        .HasForeignKey("TradingProfileId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("TradingProfile");
                });

            modelBuilder.Entity("TradingFutures.Persistence.DBModels.TradingProfileDB", b =>
                {
                    b.Navigation("TradingConditions");
                });
#pragma warning restore 612, 618
        }
    }
}
